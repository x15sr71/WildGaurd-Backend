generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  firebaseId       String            @unique
  email            String            @unique
  name             String?
  imageUrl         String?
  currentLocation  Json?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  volunteerProfile VolunteerProfile?
}


model VolunteerProfile {
  userId         String           @id
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  skills         String[]
  imageUrl       String?
  email          String?          
  phone          String           
  location       Json?  // Still stored as JSON for Prisma
  geoLocation    String? @default("") // Used for raw SQL queries
  helpPosts      AnimalHelpPost[]
}

model AnimalHelpPost {
  id                String   @id @default(uuid())
  volunteerId       String
  volunteer         VolunteerProfile @relation(fields: [volunteerId], references: [userId], onDelete: Cascade)
  images            String[] 
  description       String
  incidentLocation  Json?  // Still stored as JSON for Prisma
  geoLocation       String? @default("") // Used for raw SQL queries
  noticedAt         DateTime 
  currentActions    String   
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}


model Organization {
  id                     String   @id @default(uuid())
  name                   String   @unique
  description            String?
  focusArea              String?
  summary                String?
  location               String?
  contactNumber          String?
  emailAddress           String?
  website                String?
  speciesSpecialization  String?
  servicesOffered        String?
  operatingHours         String?
  geographicalCoverage   String?
  affiliations           String?
  emergencyResponse      String?
  volunteerOpportunities String?
  educationalPrograms    String?
  licensesCertifications String?
  fundingSources         String?
  successStories         String?
  googleMapLocation      Json?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}
